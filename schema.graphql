type Garden @entity {
  id: ID!
  address: Bytes!
  createdAt: Int!
  requestToken: Token
  outflowsCount: Int!
  outflows: [Outflow!] @derivedFrom(field: "garden")
  beneficiaries: [Beneficiary!] @derivedFrom(field: "garden")
}

type Outflow @entity {
  id: ID!
  garden: Garden!
  transferAt: Int
  beneficiary: Bytes
  requestedAmount: BigInt
  stable: Boolean
}

# Usually a sub DAO of one of the working groups of the Garden
type Beneficiary @entity {
  id: ID!
  address: Bytes!
  garden: Garden!
  totalRecived: BigInt!
  outflows: [ContributorOutflow!] @derivedFrom(field: "beneficiary")
}

type Contributor @entity {
  id: ID!
  address: Bytes!
  garden: Garden!
  totalRecived: BigInt!
}

type ContributorOutflow @entity {
  id: ID!
  transferAt: Int!
  token: Token
  beneficiary: Beneficiary!
  contributor: Contributor!
  amount: BigInt!
}

type Token @entity {
  id: ID!
  name: String!
  symbol: String
  decimals: Int!
  garden: Garden!
}
